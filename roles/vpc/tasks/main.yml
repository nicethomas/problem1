---

# Creating VPC
- name:               Create VPC
  ec2_vpc_net:
    name:             "{{ vpc_name }}"
    cidr_block:       "{{ vpc_cidr_block }}"
    region:           "{{ aws_region }}"
    aws_access_key:   "{{ aws_access_key }}"
    aws_secret_key:   "{{ aws_secret_key }}"
    state:            "present"
  register: my_vpc

- name:               Set VPC ID in variable
  set_fact:
    vpc_id:           "{{ my_vpc.vpc.id }}"


#creating two subnets.
# One public, one private.
- name:               Create Public Subnet
  ec2_vpc_subnet:
    state:            "present"
    vpc_id:           "{{ vpc_id }}"
    cidr:             "{{ public_subnet_web_cidr }}"
    az:               "{{ aws_region }}a"
    region:           "{{ aws_region }}"
    aws_access_key:   "{{ aws_access_key }}"
    aws_secret_key:   "{{ aws_secret_key }}"
    resource_tags:
      Name:           "Public Subnet"
  register: my_public_subnet

- name:               Set Public Subnet ID in variable
  set_fact:
    public_subnet_id: "{{ my_public_subnet.subnet.id }}"

- name:               Create Private Subnet
  ec2_vpc_subnet:
    state:            "present"
    vpc_id:           "{{ vpc_id }}"
    cidr:             "{{ private_subnet_app_cidr }}"
    az:               "{{ aws_region }}a"
    region:           "{{ aws_region }}"
    aws_access_key:   "{{ aws_access_key }}"
    aws_secret_key:   "{{ aws_secret_key }}"
    resource_tags:
      Name:           "Private Subnet"
  register: my_private_subnet

- name:               Set Private Subnet ID in variable
  set_fact:
    private_subnet_id: "{{ my_private_subnet.subnet.id }}"


# Creating Internet Gateway.
- name:               Create Internet Gateway for VPC
  ec2_vpc_igw:
    vpc_id:           "{{ vpc_id }}"
    region:           "{{ aws_region }}"
    aws_access_key:   "{{ aws_access_key }}"
    aws_secret_key:   "{{ aws_secret_key }}"
    state:            "present"
  register: my_vpc_igw

- name:               Set Internet Gateway ID in variable
  set_fact:
    igw_id:           "{{ my_vpc_igw.gateway_id }}"



- name: Create NAT Gateway
  ec2_vpc_nat_gateway:
    state: present
    subnet_id: "{{ public_subnet_id }}"
    wait: yes
    region: "{{ aws_region }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    if_exist_do_not_create: true
  register: my_nat_gateway

- name: Set Nat Gateway ID in variable
  set_fact:
    nat_gateway_id: "{{ my_nat_gateway.nat_gateway_id }}"


- pause: seconds=5

- name: Set up public subnet route table
  ec2_vpc_route_table:
    vpc_id: "{{ vpc_id }}"
    region: "{{ aws_region }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    tags:
      Name: "Public"
    subnets:
      - "{{ public_subnet_id }}"
    routes:
      - dest: "0.0.0.0/0"
        gateway_id: "{{ igw_id }}"

- name: Set up private subnet route table
  ec2_vpc_route_table:
    vpc_id: "{{ vpc_id }}"
    region: "{{ aws_region }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    tags:
      Name: "Private"
    subnets:
      - "{{ private_subnet_id }}"
    routes:
#      - dest: "0.0.0.0/0"
#        gateway_id: "{{ nat_gateway_id }}"
      - dest: "0.0.0.0/0"
        gateway_id: "{{ igw_id }}"

- name: Create Main Security Group
  ec2_group:
    name: "External SSH Access"
    description: "External SSH Access"
    vpc_id: "{{ vpc_id }}"
    region: "{{ aws_region }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    rules:
      - proto: "tcp"
        from_port: "22"
        to_port: "22"
        cidr_ip: "{{ cidr_ip }}"
      - proto: "tcp"
        from_port: "80"
        to_port: "80"
        cidr_ip: "{{ cidr_ip }}"
      - proto: "tcp"
        from_port: "443"
        to_port: "443"
        cidr_ip: "{{ cidr_ip }}"
  register: my_main_sg

- name: Set Main SG ID
  set_fact:
    main_sg_id: "{{ my_main_sg.group_id }}"

- name: get public IP
  connection: local
  ipify_facts:
- debug: var=ipify_public_ip


- name: Create Private Security Group
  ec2_group:
    name: "Private Instances SG"
    description: "Private Instances SG"
    vpc_id: "{{ vpc_id }}"
    region: "{{ aws_region }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    rules:
      - proto: "tcp"
        from_port: "22"
        to_port: "22"
        group_id: "{{ main_sg_id }}"
      - proto: "tcp"
        from_port: "22"
        to_port: "22"
        cidr_ip: "{{ ipify_public_ip }}/32"
      - proto: "tcp"
        from_port: "8080"
        to_port: "8080"
        group_id: "{{ main_sg_id }}"
  register: my_private_sg

- name: Set Private SG ID
  set_fact:
    private_sg_id: "{{ my_private_sg.group_id }}"
